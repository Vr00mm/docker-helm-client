name: docker-Helm
on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'
jobs:
  infos:
    name: Get Infos
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get-Version
        uses: vr00mm/github-action-semver@v0.9.2
        id: get-version
      - name: Get-AppName
        id: appName
        run: |
          APP_NAME=`echo ${GITHUB_REPOSITORY} | tr '[:upper:]' '[:lower:]'`
          echo "::set-output name=APP_NAME::${APP_NAME}"
    outputs:
      CURRENT_VERSION: ${{ steps.get-version.outputs.CURRENT_VERSION }}
      NEXT_VERSION: ${{ steps.get-version.outputs.NEXT_VERSION }}
      APP_NAME: ${{ steps.appName.outputs.APP_NAME }}

  print-infos:
    needs: infos
    name: Print Infos
    runs-on: ubuntu-latest
    steps:
      - name: Print-Version
        run: |
          echo CURRENT_VERSION: ${{ needs.infos.outputs.CURRENT_VERSION }}
          echo NEXT_VERSION: ${{ needs.infos.outputs.NEXT_VERSION }}
      - name: Print-Env
        run: printenv
      - name: Print github.ref
        run: echo github.ref ${{ github.ref }}
      - name: Print workspace content
        run:  ls ${GITHUB_WORKSPACE}

  docker-build-push:
    needs: [infos]
    name: "Build Container Image"
    runs-on: ubuntu-latest
    env:
      APP_VERSION: ${{ needs.infos.outputs.NEXT_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./docker/Dockerfile
          tags: ${{ secrets.CI_REGISTRY }}/${{ needs.infos.outputs.APP_NAME }}:${{ needs.infos.outputs.NEXT_VERSION }}
#          build-args: APP_NAME="${APP_NAME}",GIT_REPOSITORY="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}",BRANCH="${GITHUB_REF}"
#            - COMMIT: '${GITHUB_SHA}'
#            - BUILD_DATE: '$(date)'
#            - BUILD_NB: '${GITHUB_RUN_NUMBER}'
#            - APP_VERSION: '${APP_VERSION}'
#            - DOCKER_VERSION: '$(docker --version)'
#            - GO_BUILDER: 'test'
#            - WORKSPACE: '${GITHUB_WORKSPACE}'
          outputs: type=docker,dest=/tmp/${{ needs.infos.outputs.NEXT_VERSION }}.tar

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
